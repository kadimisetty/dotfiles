# vim:fileencoding=utf-8:foldmethod=marker

# INFO: {{{
#   Configuration for terminal emulator [kitty](https://sw.kovidgoyal.net/kitty/)
# AUTHOR:
#   - [Sri Kadimisetty](http:;//github.com/Kadimisetty/dotfiles/)
#   - Material from kitty, kitty-themes etc.
# INSTRUCTIONS:
#   1. Install kitty [binary](https://sw.kovidgoyal.net/kitty/binary/)
#   2. Make this configuration file available in the proper $XDG_CONFIG_HOME
#       e.g. linux : ~/.config/kitty/kitty.conf
#   3. Launch/reload kitty with `kitty_mod+f5`. Verify that
#       `kitty_mod` is still `ctrl-shift` as it might be reconfigured.
# NOTE: kitty can also be given this configuration file by:
#   1. Passing it to command line option `kitty --config`.
#   2. Setting the `kITTY_CONFIG_DIRECTORY` environment variable.
# }}} /INFO

# CONFIGURATION: {{{
# REFERENCE:
#   https://sw.kovidgoyal.net/kitty/conf/
# SHELL:
shell fish
# KITTY_MOD:
kitty_mod ctrl+shift
# RELOAD:
#   map kitty_mod+f5        load_config_file            # DEFAULT
# DEBUG:
#   map kitty_mod+f6        debug_config                # DEFAULT
# SHELL:
#   map kitty_mod+escape    kitty_shell window          # DEFAULT
# RESET:
#   map kitty_mod+delete    clear_terminal reset active # DEFAULT
# WEBSITE:
map kitty_mod+/         open_url https://sw.kovidgoyal.net/kitty/conf/
# LOCALE LANG/LANGUAGE TO en_US.UTF-8:
env LANG=en_US.UTF-8
env LANGUAGE=en_US
# }}} /CONFIGURATION

# FONTS {{{
# SUPPORTED FONTS
#   `kitty +list-fonts`
# POSTSCRIPT NAMES
#   `kitty +list-fonts --psnames`
# JETBRAINS MONO W/ NERDFONTS:
font_family             JetBrains Mono Medium Nerd Font Complete Mono
bold_font               JetBrains Mono Extra Bold Nerd Font Complete Mono
italic_font             JetBrains Mono Medium Italic Nerd Font Complete Mono
bold_italic_font        JetBrains Mono ExtraBold ExBd I Nerd Font Complete Mono
font_size               16.0
# JETBRAINS + NERDFONTS WEBSITE:
# [Official Jetbrains Mono Font](https://www.jetbrains.com/lp/mono/)
# [NerdFonts JetNerdFont Variant](https://www.nerdfonts.com/font-downloads)
# ENABLE LIGATURES:
disable_ligatures       never
# LIGATURE STATUS QUICK VISUAL CHECK:
#   -> => <> == === ->>
# TODO: [FONT FEATURES](https://sw.kovidgoyal.net/kitty/conf/#opt-kitty.font_features)
# RESIZE FONT SIZE:
# map kitty_mod+plus    change_font_size all +2.0 # DEFAULT
# map kitty_mod+minus   change_font_size all -2.0 # DEFAULT
# RESET FONT SIZE:
map kitty_mod+0         change_font_size all 0
# }}} /FONTS

# TABS {{{
# GRAMMAR:
#   `kitty_mod`         prefix generally targeting tab action
#   `kitty_mod+alt`     prefix generally targeting alternate tab action
#                       e.g. swap, using current directory etc.
# POSITION (bottom/top):
tab_bar_edge            bottom
# POWERLINE (angled/slanted/round):
tab_bar_style           powerline
tab_powerline_style     angled
#: MINIMUM NUMBER OF TABS TO DISPLAY TAB BAR:
tab_bar_min_tabs 1
# AFTER CURRENT TAB IS CLOSED, GO TO TAB (previous/left/right/last):
# tab_switch_strategy   previous        # DEFAULT
tab_switch_strategy     left
# START NEW TAB WITH CURRENT DIRECTORY:
map kitty_mod+t         new_tab_with_cwd
map kitty_mod+alt+t     new_tab_with_cwd !neighbor
# CLOSE CURRENT TAB:
map kitty_mod+w         close_tab
# GO TO NEXT/PREVIOUS TAB:
# map kitty_mod+right   next_tab        # DEFAULT
# map kitty_mod+left    previous_tab    # DEFAULT
# SWAP WITH NEXT/PREVIOUS TAB:
map kitty_mod+alt+right move_tab_forward
map kitty_mod+alt+left  move_tab_backward
# SET/RENAME CURRENT TAB TITLE:
map kitty_mod+,         set_tab_title
# GO TO LAST USED TAB (`-1` for last used tab, `ctrl+`` is a compromise):
map kitty_mod+`         goto_tab -1
map ctrl+`              goto_tab -1
# GO TO TAB POSITION (1-9):
map kitty_mod+1         goto_tab 1
map kitty_mod+2         goto_tab 2
map kitty_mod+3         goto_tab 3
map kitty_mod+4         goto_tab 4
map kitty_mod+5         goto_tab 5
map kitty_mod+6         goto_tab 6
map kitty_mod+7         goto_tab 7
map kitty_mod+8         goto_tab 8
map kitty_mod+9         goto_tab 9
# ACTIVITY SYMBOL ON UNFOCUSSED TAB IN BACKGROUND (e.g.: none/"* "):
tab_activity_symbol none
# TAB BAR TEMPLATE:
#   1. RESET FONT STYLES:
        active_tab_font_style   font_family
        inactive_tab_font_style font_family
#   2. DEFAULT:
        # tab_title_template          = "{fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{title}"
        # active_tab_title_template   = tab_title_template
#   3. TITLE (all titles italic):
        # tab_title_template          "{fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{fmt.bold}{fmt.italic}{fmt.nobold}{title}"
        # active_tab_title_template   "{fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{fmt.nobold}{fmt.italic}{fmt.bold}{title}"
#   4. INDEX+TITLE+NUM_WINDOWS (all titles italic):
        # tab_title_template          "{fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{fmt.bold}{index} {fmt.nobold}{title}{sup.num_windows}"
        # active_tab_title_template   "{fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{fmt.nobold}{index} {fmt.bold}{title}{sup.num_windows}"
#   5. INDEX+TITLE (active is italic):
        tab_title_template          "{fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{fmt.nobold}{index}{fmt.bold} {title}"
        active_tab_title_template   "{fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{fmt.italic}{fmt.nobold}{index} {fmt.bold}{title}"
# }}} /TABS

# WINDOWS {{{
# GRAMMAR:
#   `kitty_mod`         prefix generally targeting window action
#   `kitty_mod+alt`     prefix generally targeting alternate window action
#                       e.g. swap etc.
# NEW WINDOW WITH CURRENT DIRECTORY:
map kitty_mod+enter     new_window_with_cwd
# CLOSE CURRENT WINDOW WITH CONFIRMATION:
# TODO: Research `ignore-shell`
map kitty_mod+x         close_window_with_confirmation
# CLOSE CURRENT WINDOW WITHOUT CONFIRMATION:
map kitty_mod+alt+x     close_window
# GO TO NEXT/PREVIOUS WINDOW IN CURRENT WINDOW LAYOUT:
# map kitty_mod+]       next_window         # DEFAULT
# map kitty_mod+[       previous_window     # DEFAULT
# SWAP WITH NEXT/PREVIOUS WINDOW IN CURRENT WINDOW LAYOUT:
map kitty_mod+alt+]     move_window_forward
map kitty_mod+alt+[     move_window_backward
# GO TO NEIGHBORING WINDOW BY PROXIMITY:
map ctrl+shift+h        neighboring_window  left
map ctrl+shift+j        neighboring_window  down
map ctrl+shift+k        neighboring_window  up
map ctrl+shift+l        neighboring_window  right
# SWAP WITH NEIGHBORING WINDOW BY PROXIMITY:
map ctrl+shift+alt+h    move_window         left
map ctrl+shift+alt+j    move_window         down
map ctrl+shift+alt+k    move_window         up
map ctrl+shift+alt+l    move_window         right
# SWAP WITH TOP WINDOW IN CURRENT WINDOW LAYOUT:
map kitty_mod+alt+enter move_window_to_top
# GO TO RECENTLY USED WINDOW (`-1` for last used window):
map kitty_mod+alt+`     nth_window -1
map ctrl+alt+`          nth_window -1
# GO TO CHOSEN WINDOW:
map kitty_mod+f         focus_visible_window
# SWAP WITH CHOSEN WINDOW:
map kitty_mod+alt+f     swap_with_window
# GO TO WINDOW POSITION (range 1-9):
map kitty_mod+alt+1     first_window
map kitty_mod+alt+2     second_window
map kitty_mod+alt+3     third_window
map kitty_mod+alt+4     fourth_window
map kitty_mod+alt+5     fifth_window
map kitty_mod+alt+6     sixth_window
map kitty_mod+alt+7     seventh_window
map kitty_mod+alt+8     eighth_window
map kitty_mod+alt+9     ninth_window
# RESIZE CURRENT WINDOW:
# map kitty_mod+r       start_resizing_window   # DEFAULT
# APPLY NEXT WINDOW LAYOUT (like xmonad):
# map kitty_mod+l       next_layout             # DEFAULT
map kitty_mod+space     next_layout
# BROADCAST TO ALL WINDOWS (in CURRENT tab of current os window):
map kitty_mod+b launch --allow-remote-control kitty +kitten broadcast --match "state:parent_focused"
# TODO: BROADCAST TO ALL WINDOWS (in ALL tabs of current os window):
# map kitty_mod+B launch --allow-remote-control kitty +kitten broadcast
# }}} /WINDOWS

# APPEARANCE {{{
# HIDE WINDOW DECORATIONS (title-bar and window borders):
hide_window_decorations yes
# DO NOT BLINK CURSOR:
cursor_blink_interval   0
# CURSOR DECORATION (default 1.5):
cursor_beam_thickness   2.5
# INACTIVE WINDOW OPACITY (range 0-1):
inactive_text_alpha     0.7
# APPEARANCES GENERALLY NOT COVERED IN OFFICIAL KITTY THEMES:
#   WINDOW BORDERS:
active_border_color     #fabd2d
inactive_border_color   #3c3836
#   TAB BAR RELATED (choices: hex/none. none is background color if applicable):
tab_bar_background      #333
active_tab_foreground   #000
# active_tab_background #bbb
active_tab_background   #cca300
inactive_tab_foreground #444
inactive_tab_background #888
# }}} /APPEARANCE

# LAUNCHERS {{{
# GRAMMAR:
#   `kitty_mod+x`       launch app signified by `x` in a new window
#   `kitty_mod+alt+x`   launch app signified by `x` in a new tab
# HELPER (launch tab with current directory):
action_alias launch_tab_cwd launch --type=tab --cwd=current
# # HTOP TAB:
# NOTE: `htop` in window isn't desired.
# NOTE: Using `h` for window movement so do not use it for `htop`.
map kitty_mod+alt+p     launch --type=tab htop
# DOTFILES TAB:
map kitty_mod+alt+d     launch --type=tab --cwd="~/code/personal/dotfiles"
# VIM WITH VIMRC TAB:
# NOTE: `kitty_mod+v`clashes with paste, so do not use that.
map kitty_mod+alt+v     launch --type=tab --cwd="~/code/personal/dotfiles" vim vimrc
# OS WINDOW FROM CURRENT DIRECTORY (os window not same as kitty window):
# TODO: Launch this in fullscreen like with `kitty --start-as fullscreen`
map kitty_mod+n         new_os_window_with_cwd
# OS WINDOW FROM HOME DIRECTORY:
map kitty_mod+alt+n     new_os_window
# CLOSE OS WINDOW (akin to gnome close window shortcut):
map shift+cmd+c         close_os_window
# WINDOW ZOOM
# NOTE: `zoom_toggle.py` script located at `~/.config/kitty/zoom_toggle.py`
# NOTE: source `https://sw.kovidgoyal.net/kitty/kittens/custom/?highlight=zoom`
# TODO: zoom showldn't just toggle but ensure fullscreen
# TODO: zoom should hide tab bar
map kitty_mod+z kitten zoom_toggle.py
# }}} /LAUNCHERS

# MISC {{{
# }}} /MISC

# KITTY_THEMES: {{{
# OFFICIAL THEME INSTALLATION INSTRUCTIONS:
#   1. Make note (or backup) of current vim colorscheme.
#   2. Browse and pick a theme from `kitty +kitten themes`. There are many.
#   3. Pick option to place theme file into location recommended by kitty.
#   4. Copy the content of that theme file over into the following section.

# TOKYO_NIGHT {{{
# https://github.com/davidmathers/tokyo-night-kitty-theme
# Upstream: https://github.com/enkia/tokyo-night-vscode-theme

foreground #a9b1d6
background #1a1b26

# Black
color0 #414868
color8 #414868

# Red
color1 #f7768e
color9 #f7768e

# Green
color2  #73daca
color10 #73daca

# Yellow
color3  #e0af68
color11 #e0af68

# Blue
color4  #7aa2f7
color12 #7aa2f7

# Magenta
color5  #bb9af7
color13 #bb9af7

# Cyan
color6  #7dcfff
color14 #7dcfff

# White
color7  #c0caf5
color15 #c0caf5

# Cursor
cursor #c0caf5
cursor_text_color #1a1b26

# Selection highlight
selection_foreground none
selection_background #28344a

# The color for highlighting URLs on mouse-over
url_color #9ece6a

# Window borders
active_border_color #3d59a1
inactive_border_color #101014
bell_border_color #e0af68

# Tab bar
tab_bar_style fade
tab_fade 1
active_tab_foreground   #3d59a1
active_tab_background   #16161e
active_tab_font_style   bold
inactive_tab_foreground #787c99
inactive_tab_background #16161e
inactive_tab_font_style bold
tab_bar_background #101014

# Title bar
macos_titlebar_color #16161e

# Storm
# background #24283b
# cursor_text_color #24283b
# active_tab_background   #1f2335
# inactive_tab_background #1f2335
# macos_titlebar_color #1f2335
# }}} /TOKYO_NIGHT

# }}} /KITTY_THEMES
